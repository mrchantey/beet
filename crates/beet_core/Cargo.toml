[package]
name = "beet_core"
version.workspace = true
edition.workspace = true
authors.workspace = true
documentation.workspace = true
license.workspace = true
readme.workspace = true
description = "Core utilities and types for other beet crates"
repository.workspace = true


[[example]]
name = "to_tokens"
path = "examples/to_tokens.rs"
required-features = ["tokens"]

[[test]]
name = "to_tokens"
path = "tests/to_tokens.rs"
required-features = ["tokens"]


[features]
default = ["nightly"]
nightly = ["beet_utils/nightly"]
bevy_scene = ["bevy/bevy_scene", "serde"]
serde = ["dep:serde", "dep:serde_json","dep:clap", "dep:ron","dep:toml"]
rand = ["dep:rand", "dep:rand_chacha", "dep:getrandom"]

fs = ["beet_utils/fs"]
tokens = [
	"serde",
	"beet_utils/tokens",
	"dep:syn",
	"dep:quote",
	"dep:proc-macro2",
	"dep:variadics_please",
	"dep:proc-macro2-diagnostics",
]


[dependencies]
beet_utils.workspace = true
beet_core_macros.workspace = true
bevy.workspace = true

tracing.workspace = true
rapidhash.workspace = true
send_wrapper.workspace = true

# serde
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
ron = { workspace = true, optional = true }
toml = { workspace = true, optional = true }
# workspace config
clap = { workspace = true, optional = true }
heck.workspace = true

#ðŸ’¡ async
futures-lite.workspace = true
async-channel.workspace = true

# tokens dependencies
syn = { workspace = true, optional = true }
quote = { workspace = true, optional = true }
proc-macro2 = { workspace = true, optional = true }
proc-macro2-diagnostics = { workspace = true, optional = true }
variadics_please = { workspace = true, optional = true }



rand = { workspace = true, optional = true }
rand_chacha = { workspace = true, optional = true }
getrandom = { workspace = true, optional = true }

## utils
anyhow.workspace = true
thiserror.workspace = true
extend.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# server-specific dependencies (optional)
glob = { workspace = true, optional = true }

# async (server-specific)
tokio = { workspace = true, optional = true }

[dev-dependencies]
sweet.workspace = true


[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio.workspace = true
