use crate::as_beet::*;
use bevy::prelude::*;





/// An element containing code, this element will be replaced by the `<pre>`
/// generated by syntect.
#[derive(Debug, Default, Clone, PartialEq, Hash, Component, Reflect)]
#[reflect(Component)]
#[component(immutable)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "tokens", derive(ToTokens))]
pub struct CodeNode {
	/// Override the [`SyntectConfig::theme`] lang for this code node.
	pub lang: Option<String>,
	/// Override the [`SyntectConfig::theme`] theme for this code node.
	pub theme: Option<String>,
}
impl CodeNode {
	/// Create a new [`CodeNode`] with the given language.
	pub fn new(lang: impl Into<String>) -> Self {
		Self {
			lang: Some(lang.into()),
			theme: None,
		}
	}
	
}
