[package]
name = "beet_rsx"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
readme.workspace = true
description.workspace = true
documentation.workspace = true
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true


[features]
default = ["nightly", "scene"]
# default = ["nightly", "bevy_default"]
nightly = []
# client to match rsx macro conventions, for testing only
client = []
# adds css support for non-cli usage
css = ["beet_rsx_macros/css"]
serde = ["dep:serde", "beet_core/bevy_scene"]
scene = ["bevy/bevy_scene", "beet_core/bevy_scene"]
bevy_default = ["bevy/bevy_text"]
tokens = ["beet_core/tokens"]

[dependencies]
beet_rsx_macros.workspace = true
beet_core.workspace = true
beet_utils.workspace = true

#ðŸ’¡ utils
send_wrapper.workspace = true
anyhow.workspace = true
thiserror.workspace = true
extend.workspace = true
strum.workspace = true
rapidhash.workspace = true
strum_macros.workspace = true
prettyplease.workspace = true
http.workspace = true

# temp until proper bevy reactivity
flume.workspace = true

#ðŸ’¡ serde
serde = { workspace = true, optional = true }
ron = { workspace = true, optional = true }

#ðŸ’¡ bevy
bevy = { workspace = true }

#ðŸ’¡ native
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio.workspace = true

#ðŸ’¡ wasm
[target.'cfg(target_arch = "wasm32")'.dependencies]
beet_core.workspace = true
console_log.workspace = true
js-sys.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
web-sys = { workspace = true, features = [
# dom events
"AnimationEvent",
"BeforeUnloadEvent",
"ClipboardEvent",
"DragEvent",
"FocusEvent",
"HashChangeEvent",
"InputEvent",
"KeyboardEvent",
"MouseEvent",
"PageTransitionEvent",
"PopStateEvent",
"ProgressEvent",
"StorageEvent",
"TouchEvent",
"TransitionEvent",
"UiEvent",
"WheelEvent",
] }
console_error_panic_hook.workspace = true

[dev-dependencies]
beet_rsx = { path = "", features = ["tokens"] }
serde.workspace = true
sweet.workspace = true


[[test]]
name = "css"
path = "tests/css.rs"
required-features = ["css"]
