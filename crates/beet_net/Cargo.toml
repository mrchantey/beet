[package]
name = "beet_net"
version.workspace = true
edition.workspace = true
description = "Serve applications with axum and deploy with cargo-lambda."
documentation.workspace = true
readme = "README.md"
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true
publish = true

[features]
default = ["axum", "reload"]
# for conditional compilation in hooks
client = []
# wip: axum features behind this flag
axum = ["tokio", "dep:axum", "dep:tower", "dep:tower-http", "beet_core/axum"]
tokio = ["dep:tokio", "serde"]
aws = ["tokio", "dep:crc-fast", "dep:aws-sdk-s3", "dep:aws-config"]
reload = ["tower-livereload"]
lambda = ["rustls-tls", "dep:lambda_http"]
serde = ["dep:clap", "dep:base64", "beet_core/serde"]
rustls-tls = [
	"beet_core/rustls-tls",
	"aws-config?/rustls",
	"aws-sdk-s3?/rustls",
]

[dependencies]
beet_utils = { workspace = true }
beet_core = { workspace = true, features = ["bevy", "net"] }
beet_rsx.workspace = true

bevy.workspace = true

extend.workspace = true
clap = { workspace = true, optional = true }
base64 = { workspace = true, optional = true }
thiserror.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
anyhow.workspace = true
serde.workspace = true
serde_json.workspace = true
http.workspace = true
http-body-util.workspace = true
bytes.workspace = true

futures.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]


#ðŸ’¡ server
tokio = { workspace = true, optional = true, default-features = true }
axum = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-livereload = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
lambda_http = { version = "0.16", optional = true }
# lock down aws-sdk-s3 upstream, some weird nightly feature
crc-fast = { version = "=1.3.0", optional = true }
aws-sdk-s3 = { version = "1", optional = true, default-features = false, features = [
	# defaults without rustls
	"sigv4a",
	"default-https-client",
	"rt-tokio",
] }
aws-config = { version = "1", optional = true, default-features = false, features = [
	"default-https-client",
	"rt-tokio",
	"behavior-version-latest",
] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys.workspace = true
web-sys = { workspace = true, features = ["Storage"] }

[dev-dependencies]
sweet.workspace = true
