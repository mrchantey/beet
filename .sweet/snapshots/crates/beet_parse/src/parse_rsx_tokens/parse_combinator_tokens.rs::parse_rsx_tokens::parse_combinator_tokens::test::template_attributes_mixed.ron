{
    #[allow(unused)]
    use beet_dom::prelude::*;
    #[allow(unused)]
    use beet_core::prelude::*;
    ApplySnippets::resolve((
        SnippetRoot {
            file: WsPathBuf::new(
                "crates/beet_parse/src/parse_rsx_tokens/parse_combinator_tokens.rs",
            ),
            start: LineCol { line: 1u32, col: 0u32 },
        },
        InstanceRoot,
        FragmentNode,
        related! {
            Children[(ExprIdx(0u32), NodeTag(String::from("MyTemplate")),
            FragmentNode, TemplateNode,
            OnSpawnDeferred::insert(TemplateRoot::spawn(Spawn(< MyTemplate as Props >
            ::Builder::default().foo(#[allow(unused_braces)] { let bar =
            (NodeTag(String::from("br")), ElementNode { self_closing : true }); bar
            }).build().into_bundle())).into_bundle()))]
        },
    ))
}