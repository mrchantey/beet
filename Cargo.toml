# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

# sweet_test backtracing
[profile.test]
opt-level = 0
[profile.test.package.sweet_test]
opt-level = 0

[workspace.package]
version = "0.0.6-dev.1"
authors = ["Pete Hayman"]
edition = "2024"
description = "Tools for building reactive structures"
documentation = "https://docs.rs/beet"
readme = "README.md"
homepage = "https://beetrsx.dev"
repository = "https://github.com/mrchantey/beet"
license = "MIT OR Apache-2.0"
keywords = ["beet", "beetmash", "behavior", "game-ai", "robotics"]
categories = [
	"science::robotics",
	"game-development",
	"simulation",
	"wasm",
	"embedded",
]
publish = false

[workspace]
# default resolver
resolver = "2"

exclude = ["crates/wasm-bundle-bench"]

members = [
	"crates/beet_site",
	"crates/beet-cli",

	"crates/beet_build",
	"crates/beet_common",
	"crates/beet_common/macros",
	"crates/beet_rsx_combinator",
	"crates/beet_parse",

	## 💡 Flow
	"crates/beet_examples",
	"crates/beet_flow",
	"crates/beet_flow/macros",
	"crates/beet_ml",
	"crates/beet_sim",
	"crates/beet_spatial",

	## 💡 RSX
	"crates/beet_connect",
	"crates/beet_design",
	"crates/beet_query",
	"crates/beet_query/macros",
	"crates/beet_router",
	"crates/beet_template",
	"crates/beet_template/macros",
	"crates/beet_server",

	## 💡 Sweet
	"crates/sweet",
	"crates/sweet_bevy",
	"crates/sweet_fs",
	"crates/sweet_net",
	"crates/sweet_server",
	"crates/sweet_test/macros",
	"crates/sweet_test",
	"crates/sweet_utils",
	"crates/sweet_web",
	"crates/sweet-cli",

	# "crates/emby",
]

[workspace.dependencies]
## internal
beet = { path = "", version = "0.0.6-dev.1" }

beet_build = { path = "crates/beet_build", version = "0.0.6-dev.1" }
beet_common = { path = "crates/beet_common", version = "0.0.6-dev.1" }
beet_common_macros = { path = "crates/beet_common/macros", version = "0.0.6-dev.1" }
beet_rsx_combinator = { path = "crates/beet_rsx_combinator", version = "0.0.6-dev.1" }
beet_parse = { path = "crates/beet_parse", version = "0.0.6-dev.1" }

beet_examples = { path = "crates/beet_examples", version = "0.0.6-dev.1" }
beet_flow = { path = "crates/beet_flow", version = "0.0.6-dev.1" }
beet_flow_macros = { path = "crates/beet_flow/macros", version = "0.0.6-dev.1" }
beet_ml = { path = "crates/beet_ml", version = "0.0.6-dev.1" }
beet_spatial = { path = "crates/beet_spatial", version = "0.0.6-dev.1" }
beet_sim = { path = "crates/beet_sim", version = "0.0.6-dev.1" }

beet_connect = { path = "crates/beet_connect", version = "0.0.6-dev.1" }
beet_design = { path = "crates/beet_design", version = "0.0.6-dev.1" }
beet_query = { path = "crates/beet_query", version = "0.0.6-dev.1" }
beet_query_macros = { path = "crates/beet_query/macros", version = "0.0.6-dev.1" }
beet_router = { path = "crates/beet_router", version = "0.0.6-dev.1" }
beet_template = { path = "crates/beet_template", version = "0.0.6-dev.1" }
beet_template_macros = { path = "crates/beet_template/macros", version = "0.0.6-dev.1" }
beet_server = { path = "crates/beet_server", version = "0.0.6-dev.1" }

sweet = { path = "crates/sweet", version = "0.0.6-dev.1" }
sweet_bevy = { path = "crates/sweet_bevy", version = "0.0.6-dev.1" }
sweet_fs = { path = "crates/sweet_fs", version = "0.0.6-dev.1" }
sweet_net = { path = "crates/sweet_net", version = "0.0.6-dev.1" }
sweet_server = { path = "crates/sweet_server", version = "0.0.6-dev.1" }
sweet_test = { path = "crates/sweet_test", version = "0.0.6-dev.1" }
sweet_test_macros = { path = "crates/sweet_test/macros", version = "0.0.6-dev.1" }
sweet_web = { path = "crates/sweet_web", version = "0.0.6-dev.1" }
sweet_utils = { path = "crates/sweet_utils", version = "0.0.6-dev.1" }

#💡 local
bevy = { version = "0.16", default-features = false, features = [
	"std",            # std for reflect PathBuf
	"multi_threaded",
	"bevy_log",
	"bevy_color",
] }

#💡 utility
anyhow = "1"
thiserror = "1"
heck = "0.4"
once_cell = "1"
glob = "0.3"
send_wrapper = "0.6"
rapidhash = "1"
chrono = "0.4"
# old rand until https://github.com/bevyengine/bevy/pull/18047
# also when you update it remove all the RandomSource.0 in beet too please
rand = "0.8.5"
rand_chacha = "0.3.1"
# # wasm_js ignored in native
getrandom = { version = "0.2.15", features = ["js"] }


#💡 logging
log = "0.4"
tracing = "0.1"
colorize = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
pretty_env_logger = "0.4"
console_log = { version = "1", features = ["color"] }


#💡 async
futures = "0.3"
flume = "0.11"
rayon = "1"
tokio = { version = "1", features = [
	"macros",
	"sync",
	"rt",
	"rt-multi-thread",
	"time",
] }

#💡 macros

syn = { version = "2", features = [
	"extra-traits",
	"visit",
	# full for syn::pat
	"full",
] }
quote = "1"
proc-macro2 = { version = "1", features = ["span-locations"] }
proc-macro2-diagnostics = "0.10"
prettyplease = "0.2"

#💡 attributes
strum = { version = "0.26", features = ["derive"] }
strum_macros = "0.26"
extend = "1"

#💡 io
serde = { version = "1", features = ["derive"] }
serde_json = "1"
ron = "0.8"
toml = "0.8"
clap = { version = "4", features = ["derive"] }
bytes = "1"

#💡 http
http = "1"
http-body-util = "0.1"

#💡 server
axum = { version = "0.8", features = ["macros"] }
tower = "0.5"
tower-livereload = { version = "0.9" }
tower-http = { version = "0.6", features = [
	"trace",
	"fs",
	"normalize-path",
	"set-header",
] }

#💡 web
js-sys = "0.3"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
console_error_panic_hook = "0.1"
web-sys = "0.3"


#💡 style
parcel_selectors = { version = "0.28" }
lightningcss = { version = "1.0.0-alpha.63" }

[package]
name = "beet"
version.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true

include = ["CHANGELOG.md", "README.md", "/src", "/examples", "/scenes"]

[features]
default = ["flow"]
#💡 helper features
web-server = ["server", "router", "design"]
#💡 fine-grained
connect = ["dep:beet_connect"]
examples = ["bevy_default", "dep:beet_examples"]
flow = ["dep:beet_flow"]
css = ["beet_build?/css"]
design = ["template", "css", "dep:beet_design"]
router = ["template", "dep:beet_router"]
query = ["dep:beet_query"]
parse = ["dep:beet_parse"]
template = ["dep:beet_template"]
# fs = ["beet_template?/fs"]
ml = ["flow", "dep:beet_ml", "beet_examples?/ml"]
server = ["router", "dep:beet_server"]
lambda = ["server", "beet_server/lambda"]
spatial = ["flow", "dep:beet_spatial", "beet_ml?/spatial"]
sim = ["flow", "dep:beet_sim"]
build = ["parse", "dep:beet_build"]
bevy_default = [
	"bevy/default",
	"beet_examples?/bevy_default",
	"beet_flow?/bevy_default",
	"beet_ml?/bevy_default",
	"beet_spatial?/bevy_default",
	"beet_sim?/bevy_default",
]

# animation = ["beet_spatial?/animation"]
# assets = ["beet_spatial?/assets"]
# ui = ["beet_spatial?/ui"]
# reflect = ["beet_flow/reflect"]

# bevyhub = ["beet_spatial?/bevyhub", "beet_sim?/bevyhub"]
# dynamic_linking = ["bevy/dynamic_linking"]

[dependencies]
beet_common = { workspace = true }
beet_build = { workspace = true, optional = true }
beet_parse = { workspace = true, optional = true }
beet_connect = { workspace = true, optional = true }
beet_design = { workspace = true, optional = true }
beet_examples = { workspace = true, optional = true }
beet_flow = { workspace = true, optional = true }
beet_ml = { workspace = true, optional = true }
beet_query = { workspace = true, optional = true }
beet_router = { workspace = true, optional = true }
beet_template = { workspace = true, optional = true }
beet_sim = { workspace = true, optional = true }
beet_spatial = { workspace = true, optional = true }
bevy = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# required for rand 0.9 to compile on wasm targets
uuid = { version = "1", features = ["rng-getrandom"] }
getrandom = { workspace = true }

[dev-dependencies]
beet = { path = "", features = ["router"] }
# bevy.workspace = true
# bevy = { workspace = true, default_features = true }
sweet = { workspace = true, features = ["test", "bevy", "rand"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
beet = { path = "", features = ["build"] }
tokio.workspace = true
axum.workspace = true
serde.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
beet_server = { workspace = true, optional = true }
tokio.workspace = true

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook.workspace = true
web-sys.workspace = true

# 💡 Examples - dom
[[example]]
name = "ssr"
path = "examples/dom/ssr.rs"
required-features = ["server"]

# 💡 Examples - rsx

[[example]]
name = "hello_rsx"
path = "examples/rsx/hello_rsx.rs"
required-features = ["rsx"]

[[example]]
name = "dom_rsx"
path = "examples/rsx/dom_rsx.rs"
required-features = ["rsx"]

[[example]]
name = "bevy_rsx"
path = "examples/rsx/bevy_rsx.rs"
required-features = ["rsx", "bevy_default"]

# 💡 Examples - flow

[[example]]
name = "bench_local"
path = "examples/flow/bench_local.rs"
required-features = ["flow"]

[[example]]
name = "bench_global"
path = "examples/flow/bench_global.rs"
required-features = ["flow"]

[[example]]
name = "hello_world"
path = "examples/flow/hello_world.rs"
required-features = ["flow"]

[[example]]
name = "long_running"
path = "examples/flow/long_running.rs"
required-features = ["flow"]

[[example]]
name = "malenia"
path = "examples/flow/malenia.rs"
required-features = ["flow"]

[[example]]
name = "repeat_while"
path = "examples/flow/repeat_while.rs"
required-features = ["flow"]

[[example]]
name = "simple_action"
path = "examples/flow/simple_action.rs"
required-features = ["flow"]

[[example]]
name = "state_machine"
path = "examples/flow/state_machine.rs"
required-features = ["flow"]

[[example]]
name = "utility_ai"
path = "examples/flow/utility_ai.rs"
required-features = ["flow"]

# 💡 Examples - app

[[example]]
name = "hello_terminal"
path = "examples/app/hello_terminal.rs"
required-features = ["examples"]

[[package.metadata.scene]]
name = "hello-terminal"
thumb-text = "🌍"
thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/hello-world.png"
description = "A simple behavior that prints 'Hello' then 'World' to the console."
app = "app"
path = "scenes/hello-world.json"
include = ["beet-debug", "bevyhub/camera-2d", "bevyhub/ui-terminal"]


# [[example]]
# name = "app_ml"
# path = "examples/app_ml.rs"

# [[package.metadata.scene]]
# name = "app-ml"
# thumb-text = "🔨"
# description = "Full Beet App with machine learning, networking, and UI."
# app.js-url = "https://mrchantey.github.io/bevyhub-apps/beet/app_ml.js"
# app.wasm-url = "https://mrchantey.github.io/bevyhub-apps/beet/app_ml_bg.wasm"
# app.type-registry-url = "https://mrchantey.github.io/bevyhub-apps/beet/registries/type_registry_ml.json"
# app.replication-registry-url = "https://mrchantey.github.io/bevyhub-apps/beet/registries/replication_registry_ml.json"

# [[example]]
# name = "app"
# path = "examples/app.rs"

# [[package.metadata.scene]]
# name = "app"
# thumb-text = "🔨"
# description = "Basic Beet App with debugging, camera, and UI."
# app.js-url = "https://mrchantey.github.io/bevyhub-apps/beet/app.js"
# app.wasm-url = "https://mrchantey.github.io/bevyhub-apps/beet/app_bg.wasm"
# app.type-registry-url = "https://mrchantey.github.io/bevyhub-apps/beet/registries/type_registry.json"
# app.replication-registry-url = "https://mrchantey.github.io/bevyhub-apps/beet/registries/replication_registry.json"

# [[package.metadata.scene]]
# name = "beet-debug"
# thumb-text = "🐛"
# description = "Enable debugging for printing to the console, and screen if used with bevyhub/ui-terminal."
# path = "scenes/beet-debug.json"

# [[example]]
# name = "export_scenes"
# path = "examples/export_scenes.rs"

# 💡 Examples - ml

# [[package.metadata.scene]]
# name = "fetch-scene"
# thumb-text = "🏠"
# description = "A camera and the items that the fetch character can go to."
# path = "scenes/fetch-scene.json"

[[example]]
name = "fetch"
path = "examples/ml/fetch.rs"
required-features = ["examples", "ml"]

# [[package.metadata.scene]]
# name = "fetch"
# description = "Combining LLM, steering and animation behaviors."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/fetch.png"
# app = "app-ml"
# path = "scenes/fetch-npc.json"
# include = [
# 	"bevyhub/ui-terminal-input",
# 	"bevyhub/lighting-3d",
# 	"bevyhub/ground-3d",
# 	"fetch-scene",
# ]
# events.playerMessage.initial = "I'm hungry!"

# [[package.metadata.scene]]
# name = "frozen-lake-scene"
# thumb-text = "❄️"
# description = "The static scene for the frozen lake environment."
# path = "scenes/frozen-lake-scene.json"


[[example]]
name = "frozen_lake_train"
path = "examples/ml/frozen_lake_train.rs"
required-features = ["examples", "ml"]

# [[package.metadata.scene]]
# name = "frozen-lake-train"
# description = "Train a Q-learning agent to navigate the frozen lake environment."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/frozen-lake-run.png"
# app = "app-ml"
# path = "scenes/frozen-lake-train.json"
# include = [
# 	"bevyhub/ui-terminal",
# 	"bevyhub/lighting-3d",
# 	"beet-debug",
# 	"frozen-lake-scene",
# ]

[[example]]
name = "frozen_lake_run"
path = "examples/ml/frozen_lake_run.rs"
required-features = ["examples", "ml"]

# [[package.metadata.scene]]
# name = "frozen-lake-run"
# description = "Use a trained Q-learning agent to navigate the frozen lake environment."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/frozen-lake-run.png"
# app = "app-ml"
# path = "scenes/frozen-lake-run.json"
# include = [
# 	"bevyhub/ui-terminal",
# 	"bevyhub/lighting-3d",
# 	"beet-debug",
# 	"frozen-lake-scene",
# ]

[[example]]
name = "hello_ml_chat"
path = "examples/ml/hello_ml_chat.rs"
required-features = ["examples", "ml"]

[[example]]
name = "hello_ml"
path = "examples/ml/hello_ml.rs"
required-features = ["examples", "ml"]

[[package.metadata.scene]]
name = "hello-ml"
description = "A behavior that uses a Sentence Selector to score child behaviors, deciding which will run next."
thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/hello-llm.png"
path = "scenes/hello-ml.json"
include = ["bevyhub/camera-2d", "bevyhub/ui-terminal", "beet-debug"]

# 💡 Examples - spatial

[[example]]
name = "flock"
path = "examples/spatial/flock.rs"
required-features = ["examples", "spatial"]

# Too big, we need to handle for loops in scene files
# [[package.metadata.scene]]
# name = "flock"
# description = "Demonstration of flocking behaviors."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/flock.png"
# app = "app"
# path = "scenes/flock.json"
# include = ["beet-debug", "bevyhub/camera-2d", "bevyhub/space-scene"]


[[example]]
name = "hello_animation"
path = "examples/spatial/hello_animation.rs"
required-features = ["examples", "spatial"]


[[package.metadata.scene]]
name = "hello-animation"
description = "A simple behavior demonstrating animation control."
thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/hello-animation.png"
app = "app"
path = "scenes/hello-animation.json"
include = [
	"bevyhub/ui-terminal",
	"bevyhub/lighting-3d",
	"bevyhub/ground-3d",
	"beet-debug",
]

[[example]]
name = "inverse_kinematics"
path = "examples/spatial/inverse_kinematics.rs"
required-features = ["examples", "spatial"]

[[example]]
name = "seek"
path = "examples/spatial/seek.rs"
required-features = ["examples", "spatial"]

[[example]]
name = "seek_3d"
path = "examples/spatial/seek_3d.rs"
required-features = ["examples", "spatial"]

# [[package.metadata.scene]]
# name = "seek"
# description = "Demonstration of the seek behavior."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/seek.png"
# app = "app"
# path = "scenes/seek.json"
# include = ["beet-debug", "bevyhub/camera-2d", "bevyhub/space-scene"]

# [[package.metadata.scene]]
# name = "seek-3d"
# description = "A 3D demonstration of the seek behavior."
# thumb-url = "https://bevyhub-public.s3.us-west-2.amazonaws.com/assets/screenshots/seek-3d.png"
# app = "app"
# path = "scenes/seek-3d.json"
# include = ["beet-debug", "bevyhub/lighting-3d", "bevyhub/ground-3d"]
